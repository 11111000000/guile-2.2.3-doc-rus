@c -*-texinfo-*-
@c This is part of the GNU Guile Reference Manual.
@c Copyright (C)  1996, 1997, 2000, 2001, 2002, 2003, 2004, 2007, 2009, 2010
@c   Free Software Foundation, Inc.
@c See the file guile.texi for copying conditions.

@node LALR(1) Parsing
@section LALR(1) Разбор(Parsing)

Модуль @code{(system base lalr)} предоставляет 
@uref{http://code.google.com/p/lalr-scm/, @code{lalr-scm} LALR(1) генератор
парсеров от Dominique Boucher}.  @code{lalr-scm} использует тот же самый алгоритм
как GNU Bison (@pxref{Introduction, Introduction to Bison,, bison, Bison@comma{} это
Yacc-совместимый генератор разборщиков(Parser)}).  Парсеры определяются с помощью
использования макроса @code{lalr-parser}.

@deffn {Scheme Syntax} lalr-parser [@var{options}] @var{tokens} @var{rules}...
Создает синтаксический анализатор LALR(1).  @var{tokens} это список символов,
представляющих терминальные символы граматики.  @var{rules} это правила 
продукций граматики.

Каждое правило имеет вид @code{(@var{non-terminal} (@var{rhs} ...) : @var{action}
...)}, где @var{non-terminal} это имя правила, @var{rhs} это правые стороны, т.е.
продукционные правила, и  @var{action} это семантическое действие связанное с
правилом.

Сгенерированный парсер представляет собой процедуру с двумя аргументами,
которая принимает  @dfn{tokenizer} и @dfn{syntax error procedure}.  
tokenizer(токенайзер) должен быть чанком(кодом схемы) который возвращает
лексические токены, созданные как @code{make-lexical-token}.  Процедура
синтаксической ошибки(syntax error procedure) может быть вызвана с,
по крайней мере, сообщением об ошибке( строкой) и необязательно, лексическим
токеном, который вызвал ошибку.
@end deffn

Пожалуйста обратитесь к документации @code{lalr-scm} за деталями.