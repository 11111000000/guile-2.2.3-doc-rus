#
# NuINu <don't@send.my>, 2018.
#
#. extracted from /home/bear/work/guile/doc/guile/en/api-scm.texi
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-05-07 12:37+0300\n"
"PO-Revision-Date: 2018-12-21 10:18+0300\n"
"Last-Translator: NuINu <don't@send.my>\n"
"Language-Team: Russian <don't@send.my>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Gtranslator 2.91.7\n"
"Plural-Forms: nplurals=5; plural=n==1 ? 0 : n==2 ? 1 : n<7 ? 2 : n<11 ? 3 : "
"4;\n"

#: /home/bear/work/guile/doc/guile/en/api-scm.texi:6
msgid ""
"@c -*-texinfo-*-\n"
"@c This is part of the GNU Guile Reference Manual.\n"
"@c Copyright (C)  1996, 1997, 2000, 2001, 2002, 2003, 2004\n"
"@c   Free Software Foundation, Inc.\n"
"@c See the file guile.texi for copying conditions."
msgstr ""

#: /home/bear/work/guile/doc/guile/en/api-scm.texi:10
msgid ""
"@node The SCM Type\n"
"@section The SCM Type"
msgstr ""
"@node The SCM Type\n"
"@section Тип SCM"

#: /home/bear/work/guile/doc/guile/en/api-scm.texi:13
msgid ""
"Guile represents all Scheme values with the single C type @code{SCM}.\n"
"For an introduction to this topic, @xref{Dynamic Types}."
msgstr ""
"Guile представляет все значения Scheme одним Си типом @code{SCM}.\n"
"Для введения в эту тему, @xref{Dynamic Types}."

#: /home/bear/work/guile/doc/guile/en/api-scm.texi:23
msgid ""
"@deftp {C Type} SCM\n"
"@code{SCM} is the user level abstract C type that is used to represent\n"
"all of Guile's Scheme objects, no matter what the Scheme object type is.\n"
"No C operation except assignment is guaranteed to work with variables of\n"
"type @code{SCM}, so you should only use macros and functions to work\n"
"with @code{SCM} values.  Values are converted between C data types and\n"
"the @code{SCM} type with utility functions and macros.\n"
"@end deftp\n"
"@cindex SCM data type"
msgstr ""
"@deftp {C Type} SCM\n"
"@code{SCM} это абстрактный Си тип  пользовательского уровня, который "
"используется\n"
"для представления всех объектов Scheme в Guile, независимо от типа объекта "
"Scheme.\n"
"Нет операций Си, кроме присвоения гарантированно работающих с переменными "
"типа\n"
"@code{SCM}, поэтому вы должны использовать только макросы и функции для "
"работы со\n"
"значениями @code{SCM}.  Значения конвертируются между типами данных Си и "
"типом \n"
"@code{SCM} с помощью функций утилит и макросов.\n"
"@end deftp\n"
"@cindex SCM data type"

#: /home/bear/work/guile/doc/guile/en/api-scm.texi:31
msgid ""
"@deftp {C Type} scm_t_bits\n"
"@code{scm_t_bits} is an unsigned integral data type that is guaranteed\n"
"to be large enough to hold all information that is required to\n"
"represent any Scheme object.  While this data type is mostly used to\n"
"implement Guile's internals, the use of this type is also necessary to\n"
"write certain kinds of extensions to Guile.\n"
"@end deftp"
msgstr ""
"@deftp {C Type} scm_t_bits\n"
"@code{scm_t_bits} это беззнаковый обобщенный тип данных который "
"гарантированно\n"
"будет достаточно большим чтобы хранить всю информацию. которая потребуется "
"для\n"
"представления любого объекта Scheme.  Хотя этот тип данных в основном "
"используется\n"
"для реализации внутренних функций Guile,  испольование этого типа также "
"необходимо\n"
"для написания определенных видов расширений для Guile.\n"
"@end deftp"

#: /home/bear/work/guile/doc/guile/en/api-scm.texi:35
msgid ""
"@deftp {C Type} scm_t_signed_bits\n"
"This is a signed integral type of the same size as @code{scm_t_bits}.\n"
"@end deftp"
msgstr ""
"@deftp {C Type} scm_t_signed_bits\n"
"Это обобщенный тип со знаком, того же размера что и @code{scm_t_bits}.\n"
"@end deftp"

#: /home/bear/work/guile/doc/guile/en/api-scm.texi:41
msgid ""
"@deftypefn {C Macro} scm_t_bits SCM_UNPACK (SCM @var{x})\n"
"Transforms the @code{SCM} value @var{x} into its representation as an\n"
"integral type.  Only after applying @code{SCM_UNPACK} it is possible to\n"
"access the bits and contents of the @code{SCM} value.\n"
"@end deftypefn"
msgstr ""
"@deftypefn {C Macro} scm_t_bits SCM_UNPACK (SCM @var{x})\n"
"Преобразует @code{SCM} значение @var{x} в его представление в виде "
"обобщенного\n"
"типа.  Только после применения @code{SCM_UNPACK} можно получить доступ к "
"битам и\n"
"содержимому значения @code{SCM}.\n"
"@end deftypefn"

#: /home/bear/work/guile/doc/guile/en/api-scm.texi:45
msgid ""
"@deftypefn {C Macro} SCM SCM_PACK (scm_t_bits @var{x})\n"
"Takes a valid integral representation of a Scheme object and transforms\n"
"it into its representation as a @code{SCM} value.\n"
"@end deftypefn"
msgstr ""
"@deftypefn {C Macro} SCM SCM_PACK (scm_t_bits @var{x})\n"
"Принимает правильное обобщенное представление объекта Scheme и преобразует\n"
"его в представление в качестве значения @code{SCM}.\n"
"@end deftypefn"
